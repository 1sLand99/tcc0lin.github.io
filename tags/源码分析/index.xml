<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>源码分析 - 标签 - tcc0lin&#39;s blog</title>
        <link>https://tcc0lin.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</link>
        <description>源码分析 - 标签 - tcc0lin&#39;s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 26 Apr 2024 21:19:53 &#43;0800</lastBuildDate><atom:link href="https://tcc0lin.github.io/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/" rel="self" type="application/rss+xml" /><item>
    <title>Linux Kprobe原理探究</title>
    <link>https://tcc0lin.github.io/linux-kprobe%E5%8E%9F%E7%90%86%E6%8E%A2%E7%A9%B6/</link>
    <pubDate>Fri, 26 Apr 2024 21:19:53 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/linux-kprobe%E5%8E%9F%E7%90%86%E6%8E%A2%E7%A9%B6/</guid>
    <description><![CDATA[之前在分析其他安全厂商App的防护策略时，想要设计个风控分析沙盒来实现对于App行为的全面监控，包括 App访问、操作了哪些文件 执行了哪些操作]]></description>
</item><item>
    <title>Android Kernel Kprobe机制</title>
    <link>https://tcc0lin.github.io/android-kernel-kprobe%E6%9C%BA%E5%88%B6/</link>
    <pubDate>Wed, 27 Mar 2024 18:50:33 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/android-kernel-kprobe%E6%9C%BA%E5%88%B6/</guid>
    <description><![CDATA[参考 https://www.cnblogs.com/hpyu/p/14257305.html https://cloud.tencent.com/developer/article/2314696 https://linux.laoqinren.net/kernel/linux-kprobe/ https://www.cnblogs.com/xingmuxin/p/8984043.html https://zhuanlan.zhihu.com/p/655288190 https://docs.kernel.org/trace/kprobes.html]]></description>
</item><item>
    <title>LSPlant源码学习</title>
    <link>https://tcc0lin.github.io/lsplant%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Thu, 07 Mar 2024 23:09:44 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/lsplant%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[LSPlant是LSPosed官方推出的新的ART hook框架，用来替代LSPosed之前使用的YAHFA框架 从官方README上看，对于L]]></description>
</item><item>
    <title>Zygisk-v27.0源码阅读</title>
    <link>https://tcc0lin.github.io/zygisk-v27.0%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</link>
    <pubDate>Wed, 06 Mar 2024 22:56:31 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/zygisk-v27.0%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB/</guid>
    <description><![CDATA[隔了很久再读Magisk源码中关于Zygisk的部分，上次翻源码还是v25.0，这次已经更新到了v27.0。粗略扫了眼，变化的地方还是挺多的]]></description>
</item><item>
    <title>Art方法调用流程分析</title>
    <link>https://tcc0lin.github.io/art%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</link>
    <pubDate>Fri, 01 Mar 2024 19:51:22 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/art%E6%96%B9%E6%B3%95%E8%B0%83%E7%94%A8%E6%B5%81%E7%A8%8B%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[一、关于JavaVMJava是一门跨平台的语言，系统实际运行的是Java字节码，由Java虚拟机去解释执行。解释执行的过程可以看做是一个循环]]></description>
</item><item>
    <title>Dobby 短指令hook方式</title>
    <link>https://tcc0lin.github.io/dobby-%E7%9F%AD%E6%8C%87%E4%BB%A4hook%E6%96%B9%E5%BC%8F/</link>
    <pubDate>Wed, 21 Feb 2024 19:25:42 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/dobby-%E7%9F%AD%E6%8C%87%E4%BB%A4hook%E6%96%B9%E5%BC%8F/</guid>
    <description><![CDATA[从上一篇Dobby的文章可以了解到Dobby对于inline hook的实现是通过替换origin method的前三行指令（前12个字节）来跳]]></description>
</item><item>
    <title>Dobby框架源码学习</title>
    <link>https://tcc0lin.github.io/dobby%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</link>
    <pubDate>Wed, 21 Feb 2024 14:54:39 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/dobby%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%AD%A6%E4%B9%A0/</guid>
    <description><![CDATA[Dobby框架推出的时间也不短了，从Github提交记录上看最早在17年就有提交了。这期间陆陆续续在使用Dobby框架，虽然对原理有大概的了]]></description>
</item><item>
    <title>SKRoot原理分析</title>
    <link>https://tcc0lin.github.io/skroot%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</link>
    <pubDate>Sun, 17 Dec 2023 14:07:07 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/skroot%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>KernelSU原理分析</title>
    <link>https://tcc0lin.github.io/kernelsu%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</link>
    <pubDate>Fri, 15 Dec 2023 22:34:31 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/kernelsu%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>重读Magisk内部实现细节4</title>
    <link>https://tcc0lin.github.io/%E9%87%8D%E8%AF%BBmagisk%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%86%E8%8A%824/</link>
    <pubDate>Tue, 27 Jun 2023 09:56:08 &#43;0800</pubDate><author>
        <name>tcc0lin</name>
    </author><guid>https://tcc0lin.github.io/%E9%87%8D%E8%AF%BBmagisk%E5%86%85%E9%83%A8%E5%AE%9E%E7%8E%B0%E7%BB%86%E8%8A%824/</guid>
    <description><![CDATA[前言Magisk内部实现细节的第四篇，在前两篇着重讲了Magisk的三个重要功能的两个&mdash;su以及hide，这篇就来分析下最后一个]]></description>
</item></channel>
</rss>
